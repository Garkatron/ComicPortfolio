---
const { tabs = [], initialTab = tabs[0]?.id } = Astro.props;
type Content = { id: string; label: string; content: string };
---

<div id="container">
    <div class="tabs is-centered">
        <ul>
            {
                tabs.map((t: Content, i: number) => (
                    <li>
                        <a id={String(i)} data-tab={t.id} class="title is-3">
                            {t.label}
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>

    <div id="content">
        {
            tabs.map((t: Content, i: number) => (
                <div id={t.id} class="subtitle is-4 tab-pane">
                    {t.content}
                </div>
            ))
        }
    </div>
</div>

<style>
    #container {
        display: flex;
        flex-direction: column;
        max-width: 600px;
    }
    .tab-pane {
        display: none;
    }
    .visible {
        display: block;
    }
</style>

<script>
    function activeTab(tab: string) {
        const panes = document.querySelectorAll(".tab-pane");
        panes.forEach((t: Element) => {
            if (t.id === tab) {
                t.classList.add("visible");
            } else {
                t.classList.remove("visible");
            }
        });
    }
    document.addEventListener("DOMContentLoaded", () => {
        const tabs = document.querySelectorAll(".tabs li a");
        tabs.forEach((tab: Element) => {
            tab.addEventListener("click", () => {
                const tid = tab.dataset.tab;
                activeTab(tid);
            });
        });

        activeTab("default");
    });
</script>
